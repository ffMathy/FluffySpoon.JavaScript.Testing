{"version":3,"file":"PropertyState.js","sourceRoot":"","sources":["../../../src/states/PropertyState.ts"],"names":[],"mappings":"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","sourcesContent":["import { ContextState, PropertyKey } from \"./ContextState\";\r\nimport { Context } from \"src/Context\";\r\nimport { FunctionState } from \"./FunctionState\";\r\nimport { areArgumentsEqual } from \"../Utilities\";\r\n\r\nconst Nothing = Symbol();\r\n\r\nexport class PropertyState implements ContextState {\r\n    private returns: any[]|Symbol;\r\n    private callCount: number;\r\n    private recordedFunctionStates: FunctionState[];\r\n\r\n    private get isFunction() {\r\n        return this.recordedFunctionStates.length > 0;\r\n    }\r\n\r\n    public get property() {\r\n        return this._property;\r\n    }\r\n\r\n    constructor(private _property: PropertyKey) {\r\n        this.returns = Nothing;\r\n        this.recordedFunctionStates = [];\r\n        this.callCount = 0;\r\n    }\r\n\r\n    apply(context: Context, args: any[]) {\r\n        this.callCount = 0;\r\n\r\n        const matchingFunctionState = this.recordedFunctionStates.find(x => {\r\n            if(args.length !== x.arguments.length)\r\n                return false;\r\n\r\n            for(var i=0;i<args.length;i++) {\r\n                if(!areArgumentsEqual(args[i], x.arguments[i]))\r\n                    return false;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        if(matchingFunctionState) {\r\n            console.log('ex-func');\r\n            return matchingFunctionState.apply(context);\r\n        }\r\n\r\n        var functionState = new FunctionState(this._property, ...args);\r\n        context.state = functionState;\r\n\r\n        this.recordedFunctionStates.push(functionState);\r\n\r\n        console.log('states', this.recordedFunctionStates);\r\n\r\n        return context.apply(args);\r\n    }\r\n\r\n    set(context: Context, property: PropertyKey, value: any) {\r\n    }\r\n\r\n    get(context: Context, property: PropertyKey) {\r\n        if (property === 'then')\r\n            return void 0;\r\n\r\n        if(this.isFunction)\r\n            return context.proxy;\r\n\r\n        if(!context.initialState.doesCallCountMatchExpectations(this.callCount)) {\r\n            throw new Error('Expected ' + context.initialState.expectedCount);\r\n        }\r\n\r\n        if(property === 'returns') {\r\n            if(this.returns !== Nothing)\r\n                throw new Error('The return value for the property ' + this._property.toString() + ' has already been set to ' + this.returns);\r\n\r\n            return (returns: any) => {\r\n                console.log('returns', returns);\r\n\r\n                this.returns = returns;\r\n                this.callCount--;\r\n\r\n                context.state = context.initialState;\r\n            };\r\n        }\r\n\r\n        this.callCount++;\r\n\r\n        if(this.returns !== Nothing)\r\n            return this.returns[this.callCount-1];\r\n\r\n        return context.proxy;\r\n    }\r\n}"]}
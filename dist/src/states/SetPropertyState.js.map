{"version":3,"file":"SetPropertyState.js","sourceRoot":"","sources":["../../../src/states/SetPropertyState.ts"],"names":[],"mappings":";;AAIA,IAAM,OAAO,GAAG,MAAM,EAAE,CAAC;AAEzB;IAYI,0BAAoB,SAAsB;QAAE,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,6BAAc;;QAAtC,cAAS,GAAT,SAAS,CAAa;QACtC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IACvB,CAAC;IAXD,sBAAW,uCAAS;aAApB;YACI,OAAO,IAAI,CAAC,UAAU,CAAC;QAC3B,CAAC;;;OAAA;IAED,sBAAW,sCAAQ;aAAnB;YACI,OAAO,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;;;OAAA;IAOD,gCAAK,GAAL,UAAM,OAAgB;QAClB,OAAO,KAAK,CAAC,CAAC;IAClB,CAAC;IAED,8BAAG,GAAH,UAAI,OAAgB,EAAE,QAAqB,EAAE,KAAU;QACnD,IAAG,CAAC,OAAO,CAAC,YAAY,CAAC,8BAA8B,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;YACrE,MAAM,IAAI,KAAK,CAAC,WAAW,GAAG,OAAO,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;SACrE;QAED,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,8BAAG,GAAH,UAAI,OAAgB,EAAE,QAAqB;QACvC,OAAO,KAAK,CAAC,CAAC;IAClB,CAAC;IACL,uBAAC;AAAD,CAAC,AAhCD,IAgCC;AAhCY,4CAAgB","sourcesContent":["import { ContextState, PropertyKey } from \"./ContextState\";\r\nimport { Context } from \"src/Context\";\r\nimport { stringifyArguments } from \"../Utilities\";\r\n\r\nconst Nothing = Symbol();\r\n\r\nexport class SetPropertyState implements ContextState {\r\n    private callCount: number;\r\n    private _arguments: any[];\r\n\r\n    public get arguments() {\r\n        return this._arguments;\r\n    }\r\n\r\n    public get property() {\r\n        return this._property;\r\n    }\r\n\r\n    constructor(private _property: PropertyKey, ...args: any[]) {\r\n        this._arguments = args;\r\n        this.callCount = 0;\r\n    }\r\n\r\n    apply(context: Context) {\r\n        return void 0;\r\n    }\r\n\r\n    set(context: Context, property: PropertyKey, value: any) {\r\n        if(!context.initialState.doesCallCountMatchExpectations(this.callCount)) {\r\n            throw new Error('Expected ' + context.initialState.expectedCount);\r\n        }\r\n\r\n        this.callCount++;\r\n    }\r\n\r\n    get(context: Context, property: PropertyKey) {\r\n        return void 0;\r\n    }\r\n}"]}
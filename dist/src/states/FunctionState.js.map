{"version":3,"file":"FunctionState.js","sourceRoot":"","sources":["../../../src/states/FunctionState.ts"],"names":[],"mappings":";;AAEA,0CAAkD;AAElD,IAAM,OAAO,GAAG,MAAM,EAAE,CAAC;AAEzB;IAaI,uBAAoB,SAAsB;QAAE,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,6BAAc;;QAAtC,cAAS,GAAT,SAAS,CAAa;QACtC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IACvB,CAAC;IAZD,sBAAW,oCAAS;aAApB;YACI,OAAO,IAAI,CAAC,UAAU,CAAC;QAC3B,CAAC;;;OAAA;IAED,sBAAW,mCAAQ;aAAnB;YACI,OAAO,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;;;OAAA;IAQD,6BAAK,GAAL,UAAM,OAAgB;QAClB,IAAG,CAAC,OAAO,CAAC,YAAY,CAAC,8BAA8B,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;YACrE,MAAM,IAAI,KAAK,CAAC,WAAW,GAAG,OAAO,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;SACrE;QAED,IAAI,CAAC,SAAS,EAAE,CAAC;QAEjB,IAAG,IAAI,CAAC,OAAO,KAAK,OAAO;YACvB,OAAO,OAAO,CAAC,KAAK,CAAC;QAEzB,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;IAC5C,CAAC;IAED,2BAAG,GAAH,UAAI,OAAgB,EAAE,QAAqB,EAAE,KAAU;IACvD,CAAC;IAED,2BAAG,GAAH,UAAI,OAAgB,EAAE,QAAqB;QAA3C,iBAgBC;QAfG,IAAG,QAAQ,KAAK,SAAS,EAAE;YACvB,IAAG,IAAI,CAAC,OAAO,KAAK,OAAO;gBACvB,MAAM,IAAI,KAAK,CAAC,oCAAoC,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,GAAG,QAAQ,GAAG,8BAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,2BAA2B,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;YAEpL,OAAO;gBAAC,iBAAiB;qBAAjB,UAAiB,EAAjB,qBAAiB,EAAjB,IAAiB;oBAAjB,4BAAiB;;gBACrB,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;gBAEhC,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;gBACvB,KAAI,CAAC,SAAS,EAAE,CAAC;gBAEjB,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC;YACzC,CAAC,CAAC;SACL;QAED,OAAO,OAAO,CAAC,KAAK,CAAC;IACzB,CAAC;IACL,oBAAC;AAAD,CAAC,AApDD,IAoDC;AApDY,sCAAa","sourcesContent":["import { ContextState, PropertyKey } from \"./ContextState\";\r\nimport { Context } from \"src/Context\";\r\nimport { stringifyArguments } from \"../Utilities\";\r\n\r\nconst Nothing = Symbol();\r\n\r\nexport class FunctionState implements ContextState {\r\n    private returns: any[]|Symbol;\r\n    private callCount: number;\r\n    private _arguments: any[];\r\n\r\n    public get arguments() {\r\n        return this._arguments;\r\n    }\r\n\r\n    public get property() {\r\n        return this._property;\r\n    }\r\n\r\n    constructor(private _property: PropertyKey, ...args: any[]) {\r\n        this._arguments = args;\r\n        this.returns = Nothing;\r\n        this.callCount = 0;\r\n    }\r\n\r\n    apply(context: Context) {\r\n        if(!context.initialState.doesCallCountMatchExpectations(this.callCount)) {\r\n            throw new Error('Expected ' + context.initialState.expectedCount);\r\n        }\r\n\r\n        this.callCount++;\r\n\r\n        if(this.returns === Nothing)\r\n            return context.proxy;\r\n\r\n        return this.returns[this.callCount - 1];\r\n    }\r\n\r\n    set(context: Context, property: PropertyKey, value: any) {\r\n    }\r\n\r\n    get(context: Context, property: PropertyKey) {\r\n        if(property === 'returns') {\r\n            if(this.returns !== Nothing)\r\n                throw new Error('The return value for the function ' + this._property.toString() + ' with ' + stringifyArguments(this._arguments) + ' has already been set to ' + this.returns);\r\n\r\n            return (...returns: any[]) => {\r\n                console.log('returns', returns);\r\n\r\n                this.returns = returns;\r\n                this.callCount--;\r\n                \r\n                context.state = context.initialState;\r\n            };\r\n        }\r\n\r\n        return context.proxy;\r\n    }\r\n}"]}
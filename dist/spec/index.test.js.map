{"version":3,"file":"index.test.js","sourceRoot":"","sources":["../../spec/index.test.ts"],"names":[],"mappings":"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","sourcesContent":["import test from 'ava';\r\n\r\nimport { Substitute, Arg } from '../src/Index';\r\nimport { areArgumentsEqual } from '../src/Utilities';\r\nimport { OmitProxyMethods, ObjectSubstitute } from '../src/Transformations';\r\n\r\nclass Dummy {\r\n\r\n}\r\n\r\nexport class Example {\r\n\ta = \"1337\";\r\n\r\n\tc(arg1: string, arg2: string) {\r\n\t\treturn \"hello \" + arg1 + \" world (\" + arg2 + \")\";\r\n\t}\r\n\r\n\tget d() {\r\n\t\treturn 1337;\r\n\t}\r\n\r\n\tset v(x: string) {\r\n\t\tconsole.log('define: ' + x);\r\n\t}\r\n\r\n\treceived(stuff: number|string) {\r\n\r\n\t}\r\n\r\n\treturnPromise() {\r\n\t\treturn Promise.resolve(new Dummy());\r\n\t}\r\n\r\n\tfoo() {\r\n\t\treturn 'stuff';\r\n\t}\r\n}\r\n\r\nlet instance: Example;\r\nlet substitute: ObjectSubstitute<OmitProxyMethods<Example>, Example>;\r\n\r\ntest.beforeEach(() => {\r\n\tinstance = new Example();\r\n\tsubstitute = Substitute.for<Example>();\r\n});\r\n\r\ntest('class with method called \"received\" can be used for call count verification when proxies are suspended', t => {\r\n\tSubstitute.disableFor(substitute).received(2);\r\n\r\n\tt.throws(() => substitute.received(2).received(2));\r\n\tt.notThrows(() => substitute.received(1).received(2));\r\n});\r\n\r\ntest('class with method called \"received\" can be used for call count verification', t => {\r\n\tSubstitute.disableFor(substitute).received('foo');\r\n\r\n\tt.notThrows(() => substitute.received(1).received('foo'));\r\n\tt.throws(() => substitute.received(2).received('foo'));\r\n});\r\n\r\ntest('partial mocks using function mimicks with all args', t => {\r\n\tsubstitute.c(Arg.all()).mimicks(instance.c);\r\n\r\n\tt.deepEqual(substitute.c('a', 'b'), 'hello a world (b)');\r\n});\r\n\r\ntest('can call received twice', t => { \r\n\tsubstitute.c('blah', 'fuzz');\r\n\r\n\tt.throws(() => substitute.received(1337).c('foo', 'bar'), \r\n`Expected 1337 calls to the method c with arguments [foo, bar], but received none of such calls.\r\nAll calls received to method c:\r\n-> 1 call with arguments [blah, fuzz]`);\r\n\r\n\tt.throws(() => substitute.received(2117).c('foo', 'bar'),\r\n`Expected 2117 calls to the method c with arguments [foo, bar], but received none of such calls.\r\nAll calls received to method c:\r\n-> 1 call with arguments [blah, fuzz]`);\r\n});\r\n\r\ntest('class string field get received', t => {\r\n\tvoid substitute.a;\r\n\tvoid substitute.a;\r\n\tvoid substitute.a;\r\n\tvoid substitute.a;\r\n\r\n\tt.throws(() => substitute.received(3).a);\r\n\tt.notThrows(() => substitute.received().a);\r\n\tt.notThrows(() => substitute.received(4).a);\r\n});\r\n\r\ntest('class string field set received', t => {\r\n\tsubstitute.v = undefined;\r\n\tsubstitute.v = null;\r\n\tsubstitute.v = 'hello';\r\n\tsubstitute.v = 'hello';\r\n\tsubstitute.v = 'world';\r\n\t\r\n\tt.notThrows(() => substitute.received().v = 'hello');\r\n\tt.notThrows(() => substitute.received(5).v = Arg.any());\r\n\tt.notThrows(() => substitute.received().v = Arg.any());\r\n\tt.notThrows(() => substitute.received(2).v = 'hello');\r\n\tt.notThrows(() => substitute.received(2).v = Arg.is(x => x && x.indexOf('ll') > -1));\r\n\r\n\tt.throws(() => substitute.received(2).v = Arg.any());\r\n\tt.throws(() => substitute.received(1).v = Arg.any());\r\n\tt.throws(() => substitute.received(1).v = Arg.is(x => x && x.indexOf('ll') > -1));\r\n\tt.throws(() => substitute.received(3).v = 'hello');\r\n});\r\n\r\ntest('class method returns with placeholder args', t => {\r\n\tsubstitute.c(Arg.any(), \"there\").returns(\"blah\", \"haha\");\r\n\t\r\n\tt.is(substitute.c(\"hi\", \"there\"), 'blah');\r\n\tt.is(substitute.c(\"his\", \"there\"), 'haha');\r\n\tt.is<any>(substitute.c(\"his\", \"there\"), void 0);\r\n\tt.is<any>(substitute.c(\"hi\", \"there\"), void 0);\r\n});\r\n\r\ntest('partial mocks using function mimicks with specific args', t => {\r\n\tsubstitute.c('a', 'b').mimicks(instance.c);\r\n\r\n\tt.is(substitute.c('a', 'b'), 'hello a world (b)');\r\n});\r\n\r\ntest('class method returns with specific args', t => {\r\n\tsubstitute.c(\"hi\", \"there\").returns(\"blah\", \"haha\");\r\n\r\n\tt.is(substitute.c(\"hi\", \"there\"), 'blah');\r\n\tt.is(substitute.c(\"hi\", \"there\"), 'haha');\r\n\tt.is(substitute.c(\"hi\", \"there\"), void 0);\r\n\tt.is(substitute.c(\"hi\", \"there\"), void 0);\r\n});\r\n\r\ntest('returning other fake from promise works', async t => {\r\n\tconst otherSubstitute = Substitute.for<Dummy>();\r\n\tsubstitute.returnPromise().returns(Promise.resolve(otherSubstitute));\r\n\r\n\tt.is(otherSubstitute, await substitute.returnPromise());\r\n});\r\n\r\ntest('returning resolved promises works', async t => {\r\n\tsubstitute.returnPromise().returns(Promise.resolve(1338));\r\n\r\n\tt.is(1338, await substitute.returnPromise());\r\n});\r\n\r\ntest('class void returns', t => {\r\n\tsubstitute.foo().returns(void 0, null);\r\n\r\n\tt.is(substitute.foo(), void 0);\r\n\tt.is(substitute.foo(), null);\r\n}); \r\n\r\ntest('class method received', t => {\r\n\tvoid substitute.c(\"hi\", \"there\");\r\n\tvoid substitute.c(\"hi\", \"the1re\");\r\n\tvoid substitute.c(\"hi\", \"there\");\r\n\tvoid substitute.c(\"hi\", \"there\");\r\n\tvoid substitute.c(\"hi\", \"there\");\r\n\r\n\tt.notThrows(() => substitute.received(4).c('hi', 'there'));\r\n\tt.notThrows(() => substitute.received(1).c('hi', 'the1re'));\r\n\tt.notThrows(() => substitute.received().c('hi', 'there'));\r\n\r\n\tt.throws(() => substitute.received(7).c('hi', 'there'), \r\n`Expected 7 calls to the method c with arguments [hi, there], but received 4 of such calls.\r\nAll calls received to method c:\r\n-> 4 calls with arguments [hi, there]\r\n-> 1 call with arguments [hi, the1re]`);\r\n});\r\n\r\ntest('received call matches after partial mocks using property instance mimicks', t => {\r\n\tsubstitute.d.mimicks(() => instance.d);\r\n\tsubstitute.c('lala', 'bar');\r\n\r\n\tsubstitute.received(1).c('lala', 'bar');\r\n\tsubstitute.received(1).c('lala', 'bar');\r\n\r\n\tt.notThrows(() => substitute.received(1).c('lala', 'bar'));\r\n\tt.throws(() => substitute.received(2).c('lala', 'bar'),\r\n`Expected 2 calls to the method c with arguments [lala, bar], but received 1 of such call.\r\nAll calls received to method c:\r\n-> 1 call with arguments [lala, bar]`);\r\n\t\r\n\tt.deepEqual(substitute.d, 1337);\r\n});\r\n\r\ntest('partial mocks using property instance mimicks', t => {\r\n\tsubstitute.d.mimicks(() => instance.d);\r\n\r\n\tt.deepEqual(substitute.d, 1337);\r\n});\r\n\r\ntest('are arguments equal', t => {\r\n\tt.true(areArgumentsEqual(Arg.any(), 'hi'));\r\n\tt.true(areArgumentsEqual(Arg.any('array'), ['foo', 'bar']));\r\n\r\n\tt.false(areArgumentsEqual(['foo', 'bar'], ['foo', 'bar']));\r\n\tt.false(areArgumentsEqual(Arg.any('array'), 1337));\r\n});\r\n\r\ntest('class string field get returns', t => {\r\n\tsubstitute.a.returns(\"foo\", \"bar\");\r\n\r\n\tt.deepEqual(substitute.a, 'foo');\r\n\tt.deepEqual(substitute.a, 'bar');\r\n\tt.deepEqual(substitute.a, void 0);\r\n\tt.deepEqual(substitute.a, void 0);\r\n});"]}
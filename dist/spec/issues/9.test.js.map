{"version":3,"file":"9.test.js","sourceRoot":"","sources":["../../../spec/issues/9.test.ts"],"names":[],"mappings":"AAAA,0BAA0B;AAE1B,gDAAgD;AAChD,gEAAgE;AAEhE,yBAAyB;AACzB,gBAAgB;AAChB,6BAA6B;AAC7B,gBAAgB;AAChB,KAAK;AACL,IAAI;AAEJ,6CAA6C;AAE7C,0BAA0B;AAC1B,2CAA2C;AAC3C,MAAM;AAGN,6DAA6D;AAC7D,sCAAsC;AACtC,0BAA0B;AAC1B,yCAAyC;AACzC,gBAAgB;AAChB,MAAM","sourcesContent":["// import test from 'ava';\r\n\r\n// import { Substitute } from '../../src/Index';\r\n// import { ObjectSubstitute } from '../../src/Transformations';\r\n\r\n// export class Example {\r\n// \tblocking() {\r\n// \t\tconsole.log('blocking');\r\n// \t\treturn 123;\r\n// \t}\r\n// }\r\n\r\n// let substitute: ObjectSubstitute<Example>;\r\n\r\n// test.beforeEach(() => {\r\n// \tsubstitute = Substitute.for<Example>();\r\n// });\r\n\r\n\r\n// test('issue 9: can record method with 0 arguments', t => {\r\n// \tsubstitute.blocking().returns(42);\r\n// \tsubstitute.blocking();\r\n//     substitute.received(1).blocking();\r\n//     t.pass();\r\n// });"]}